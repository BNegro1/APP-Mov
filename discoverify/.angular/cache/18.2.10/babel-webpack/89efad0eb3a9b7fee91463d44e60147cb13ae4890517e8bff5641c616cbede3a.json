{"ast":null,"code":"import _asyncToGenerator from \"D:/Repositorios Oficial/Aplicacion-Movil/APP-Mov/discoverify/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _SpotifyAuthService;\nimport axios from 'axios';\nimport * as i0 from \"@angular/core\";\n// Datos de Auth para API de Spotify\n// https://developer.spotify.com/\n// Documentaicón: https://developer.spotify.com/documentation/web-api\n// Dashboard: https://developer.spotify.com/dashboard\n// Este servicio se encarga de obtener el token de acceso para la API de Spotify.\nexport class SpotifyAuthService {\n  constructor() {\n    this.clientId = '3881fb07520a491f9090ad3ebc97ccb8';\n    this.clientSecret = '90bdd6d2ad06437185aa0eeda7bb1fc8';\n    this.tokenUrl = 'https://accounts.spotify.com/api/token';\n    this.accessToken = '';\n  }\n  getAccessToken() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.accessToken) {\n        return _this.accessToken; // AccesToken retorna SOLO si está disponible.\n      }\n      const headers = {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Basic ${btoa(_this.clientId + ':' + _this.clientSecret)}`\n      };\n      const body = 'grant_type=client_credentials';\n      try {\n        const response = yield axios.post(_this.tokenUrl, body, {\n          headers\n        });\n        _this.accessToken = response.data.access_token;\n        return _this.accessToken;\n      } catch (error) {\n        console.error('Error al acceder al token, desc. error:', error);\n        throw new Error('No se puede acceder al token especificado');\n      }\n    })();\n  }\n}\n_SpotifyAuthService = SpotifyAuthService;\n_SpotifyAuthService.ɵfac = function SpotifyAuthService_Factory(__ngFactoryType__) {\n  return new (__ngFactoryType__ || _SpotifyAuthService)();\n};\n_SpotifyAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _SpotifyAuthService,\n  factory: _SpotifyAuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["axios","SpotifyAuthService","constructor","clientId","clientSecret","tokenUrl","accessToken","getAccessToken","_this","_asyncToGenerator","headers","Authorization","btoa","body","response","post","data","access_token","error","console","Error","factory","ɵfac","providedIn"],"sources":["D:\\Repositorios Oficial\\Aplicacion-Movil\\APP-Mov\\discoverify\\src\\app\\services\\spotify-auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport axios from 'axios';\n\n@Injectable({\n  providedIn: 'root',\n})\n\n// Datos de Auth para API de Spotify\n// https://developer.spotify.com/\n// Documentaicón: https://developer.spotify.com/documentation/web-api\n// Dashboard: https://developer.spotify.com/dashboard\n\n// Este servicio se encarga de obtener el token de acceso para la API de Spotify.\nexport class SpotifyAuthService {\n  private clientId = '3881fb07520a491f9090ad3ebc97ccb8';\n  private clientSecret = '90bdd6d2ad06437185aa0eeda7bb1fc8';\n  private tokenUrl = 'https://accounts.spotify.com/api/token';\n  private accessToken: string = '';\n\n  constructor() {}\n\n  async getAccessToken(): Promise<string> {\n    if (this.accessToken) {\n      return this.accessToken; // AccesToken retorna SOLO si está disponible.\n    }\n\n    const headers = {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${btoa(this.clientId + ':' + this.clientSecret)}`,\n    };\n\n    const body = 'grant_type=client_credentials';\n\n    try {\n      const response = await axios.post(this.tokenUrl, body, { headers });\n      this.accessToken = response.data.access_token;\n      return this.accessToken;\n    } catch (error) {\n      console.error('Error al acceder al token, desc. error:', error);\n      throw new Error('No se puede acceder al token especificado');\n    }\n  }\n}\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;;AAMzB;AACA;AACA;AACA;AAEA;AACA,OAAM,MAAOC,kBAAkB;EAM7BC,YAAA;IALQ,KAAAC,QAAQ,GAAG,kCAAkC;IAC7C,KAAAC,YAAY,GAAG,kCAAkC;IACjD,KAAAC,QAAQ,GAAG,wCAAwC;IACnD,KAAAC,WAAW,GAAW,EAAE;EAEjB;EAETC,cAAcA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAClB,IAAID,KAAI,CAACF,WAAW,EAAE;QACpB,OAAOE,KAAI,CAACF,WAAW,CAAC,CAAC;MAC3B;MAEA,MAAMI,OAAO,GAAG;QACd,cAAc,EAAE,mCAAmC;QACnDC,aAAa,EAAE,SAASC,IAAI,CAACJ,KAAI,CAACL,QAAQ,GAAG,GAAG,GAAGK,KAAI,CAACJ,YAAY,CAAC;OACtE;MAED,MAAMS,IAAI,GAAG,+BAA+B;MAE5C,IAAI;QACF,MAAMC,QAAQ,SAASd,KAAK,CAACe,IAAI,CAACP,KAAI,CAACH,QAAQ,EAAEQ,IAAI,EAAE;UAAEH;QAAO,CAAE,CAAC;QACnEF,KAAI,CAACF,WAAW,GAAGQ,QAAQ,CAACE,IAAI,CAACC,YAAY;QAC7C,OAAOT,KAAI,CAACF,WAAW;MACzB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;QAC/D,MAAM,IAAIE,KAAK,CAAC,2CAA2C,CAAC;MAC9D;IAAC;EACH;;sBA5BWnB,kBAAkB;;mCAAlBA,mBAAkB;AAAA;;SAAlBA,mBAAkB;EAAAoB,OAAA,EAAlBpB,mBAAkB,CAAAqB,IAAA;EAAAC,UAAA,EATjB;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}